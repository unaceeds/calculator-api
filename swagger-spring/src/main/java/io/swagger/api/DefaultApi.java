/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.10).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Input;
import io.swagger.model.Result;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-11-26T13:30:28.240Z")

@Api(value = "default", description = "the default API")
public interface DefaultApi {

    @ApiOperation(value = "", nickname = "rootGet", notes = "", response = Result.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "200 response", response = Result.class),
        @ApiResponse(code = 400, message = "400 response") })
    @RequestMapping(value = "/",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Result> rootGet(@ApiParam(value = "") @Valid @RequestParam(value = "op", required = false) String op,@ApiParam(value = "") @Valid @RequestParam(value = "a", required = false) String a,@ApiParam(value = "") @Valid @RequestParam(value = "b", required = false) String b);


    @ApiOperation(value = "", nickname = "rootPost", notes = "", response = Result.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "200 response", response = Result.class),
        @ApiResponse(code = 400, message = "400 response") })
    @RequestMapping(value = "/",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Result> rootPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Input input);

}
